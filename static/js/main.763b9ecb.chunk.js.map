{"version":3,"sources":["helpers/classname.ts","components/page/page.tsx","components/table/__head/table-head.tsx","components/table/__body/table-body.tsx","components/table/__row/table-row.tsx","components/table/__cell/table-cell.tsx","components/table/table.tsx","components/button/button.tsx","components/books-table/books-table.tsx","components/books/books.tsx","components/form/__field/form-field.jsx","components/form/__actions/form-actions.jsx","components/form/__action/form-action.jsx","components/form/form.tsx","components/text-field/text-field.tsx","components/number-field/number-field.tsx","components/checkbox/checkbox.tsx","components/book-form/book-form.tsx","components/modal/modal.tsx","components/book-modal/book-modal.tsx","store/books-store.ts","pages/home/home.tsx","pages/not-found/not-found.jsx","components/app/app.tsx","index.tsx"],"names":["extensionsDefaultData","mods","mix","classname","baseClass","extensions","defaultExtensions","defaultMods","defaultMix","modsEntries","Object","entries","mixes","trim","length","concat","modificators","map","key","value","join","Page","props","className","children","TableHead","TableBody","TableRow","TableCell","CellTag","type","Table","theme","Button","onClick","BooksTable","books","book","title","author","price","date","inStock","onEditBook","id","onDeleteBook","observer","onAddBook","FormField","FormActions","FormAction","Form","autocomplete","onSubmit","autoComplete","TextField","caption","htmlFor","name","onChange","onFocus","NumberField","Checkbox","checked","defaultFormState","BookForm","bookData","useState","formState","setFormState","invalidFields","setInvalidFields","onFieldChange","e","target","Number","parseFloat","onFieldFocus","currentTarget","submitForm","preventDefault","submitHandler","cancelHandler","state","Modal","isOpen","TITLE","add","edit","BookModal","closeHandler","observable","Math","random","makeAutoObservable","this","newBook","Date","now","push","find","newData","editableBookIndex","findIndex","bookToRemove","remove","HomeView","editableBookData","setEditableBookData","isAddBookModalOpen","setIsAddBookModalOpen","isEditBookModalOpen","setIsEditBookModalOpen","toggleAddBookModal","toggleEditBookModal","editableBook","booksStore","getEditableBookData","deleteBook","addBook","editedBook","editBook","NotFoundView","to","App","StrictMode","exact","path","component","Home","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.763b9ecb.chunk.js","sourcesContent":["interface TExtensions {\n  mix?: string,\n  mods?: Record<string, string | boolean>,\n};\n\nconst extensionsDefaultData = { mods: {}, mix: '' };\n\nexport default function classname(\n  baseClass: string,\n  extensions: TExtensions = extensionsDefaultData,\n  defaultExtensions: TExtensions = extensionsDefaultData,\n): string {\n  const { mods, mix } = extensions;\n  const { mods: defaultMods, mix: defaultMix } = defaultExtensions;\n\n  const modsEntries = Object.entries({ ...defaultMods, ...mods });\n  const mixes = `${defaultMix} ${mix}`.trim();\n\n  if (!modsEntries.length) return baseClass.concat(' ', mixes);\n\n  const modificators = modsEntries\n    .map(([key, value]) => typeof value === 'boolean'\n      ? `${baseClass}_${key}`\n      : `${baseClass}_${key}_${value}`\n    )\n    .join(' ');\n\n  return baseClass.concat(' ', modificators, ' ', mixes);\n}\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ninterface IPageProps {\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n}\n\nconst Page: React.FC<IPageProps> = (props) => (\n  <div className={classname('page', props)}>\n    {props.children}\n  </div>\n);\n\nexport default Page;\n","import React from 'react';\n\nconst TableHead: React.FC = ({ children }) => (\n  <thead className=\"table__head\">\n    {children}\n  </thead>\n);\n\nexport default TableHead;\n","import React from 'react';\n\nconst TableBody: React.FC = ({ children }) => (\n  <tbody className=\"table__body\">\n    {children}\n  </tbody>\n);\n\nexport default TableBody;\n","import React from 'react';\n\nconst TableRow: React.FC = ({ children }) => (\n  <tr className=\"table__row\">\n    {children}\n  </tr>\n);\n\nexport default TableRow;\n","import React from 'react';\n\nimport classname from '../../../helpers/classname';\n\ninterface ITableCell {\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n}\n\nconst TableCell: React.FC<ITableCell> = (props) => {\n  const CellTag = props.mods && props.mods.type === 'heading' ? 'th' : 'td';\n\n  return (\n    <CellTag className={classname('table__cell', props)}>\n      <div className=\"table__cell-content\">\n        {props.children}\n      </div>\n    </CellTag>\n  );\n};\n\nexport default TableCell;\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ninterface ITable {\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n}\n\nconst Table: React.FC<ITable> = (props) => (\n  <table className={classname('table', props, { mods: { theme: 'standard' } })}>\n    {props.children}\n  </table>\n);\n\nexport default Table;\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ninterface TButtonProps {\n  children: React.ReactNode;\n  onClick: (event?: any) => void;\n  type?: 'button' | 'reset' | 'submit';\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n};\n\nconst Button: React.FC<TButtonProps> = (props) => {\n  const {\n    children,\n    onClick,\n    type = 'button',\n  } = props;\n\n  return (\n    <button\n      className={classname('button', props)}\n      onClick={onClick}\n      type={type}\n    >\n      <span className=\"button__content\">\n        {children}\n      </span>\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Table, {\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '../table';\nimport Button from '../button';\n\nimport { IBookIndexed } from '../../models';\n\ninterface IBooksTableProps {\n  onEditBook: (id?: number) => void;\n  onDeleteBook: (id: number) => void;\n  books: IBookIndexed[];\n}\n\nconst BooksTable: React.FC<IBooksTableProps> = (props) => {\n  const { books = [] } = props;\n\n  return (\n    <Table\n      mods={{ type: 'books' }}\n      mix={'books-table'}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell mods={{ type: 'heading' }}>\n            Название\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            Автор\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            Стоимость\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            Дата\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            В наличии\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading', 'hidden-content': true }}>\n            Редактировать\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading', 'hidden-content': true }}>\n            Удалить\n          </TableCell>\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {books.map(book => (\n          <TableRow key={book.id}>\n            <TableCell>\n              {book.title}\n            </TableCell>\n\n            <TableCell>\n              {book.author}\n            </TableCell>\n\n            <TableCell>\n              {book.price}\n            </TableCell>\n\n            <TableCell>\n              {book.date}\n            </TableCell>\n\n            <TableCell>\n              {book.inStock ? 'Да' : 'Нет'}\n            </TableCell>\n\n            <TableCell>\n              <Button\n                mods={{\n                  theme: 'action',\n                  'only-icon': true,\n                }}\n                mix={'books-table__edit'}\n                onClick={() => props.onEditBook(book.id)}\n              >\n                Редактировать\n              </Button>\n            </TableCell>\n\n            <TableCell>\n              <Button\n                mods={{\n                  theme: 'action',\n                  'only-icon': true,\n                }}\n                mix={'books-table__delete'}\n                onClick={() => props.onDeleteBook(book.id)}\n              >\n                Удалить\n              </Button>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  )\n};\n\nexport default BooksTable;\n","import { observer } from \"mobx-react\"\n\nimport BooksTable from '../books-table';\nimport Button from '../button';\n\nimport classname from '../../helpers/classname';\n\nimport { IBookIndexed } from '../../models';\n\ninterface IBooksProps {\n  onAddBook: () => void;\n  onEditBook: (id?: number) => void;\n  onDeleteBook: (id: number) => void;\n  books: IBookIndexed[];\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n}\n\nconst Books: React.FC<IBooksProps> = (props) => {\n  const { books = [] } = props;\n\n  return (\n    <section className={classname('books', props)}>\n      <h1 className=\"books__title\">\n        Книги\n      </h1>\n\n      {!!books.length\n        ? (\n          <BooksTable\n            books={books}\n            onEditBook={props.onEditBook}\n            onDeleteBook={props.onDeleteBook}\n          />\n        )\n        : (\n          <p className=\"books__description\">В вашем списке ещё нет книг.</p>\n        )\n      }\n\n      <div className=\"books__actions\">\n        <Button\n          mods={{\n            theme: 'standard',\n            type: 'primary',\n          }}\n          onClick={props.onAddBook}\n        >\n          Добавить\n        </Button>\n      </div>\n    </section>\n  );\n}\n\nexport default observer(Books);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../../helpers/classname';\n\nconst FormField = (props) => (\n  <div className={classname('form__field', props)}>\n    {props.children}\n  </div>\n);\n\nFormField.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default FormField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../../helpers/classname';\n\nconst FormActions = (props) => (\n  <div className={classname('form__actions', props)}>\n    {props.children}\n  </div>\n);\n\nFormActions.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default FormActions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../../helpers/classname';\n\nconst FormAction = (props) => (\n  <div className={classname('form__action', props)}>\n    {props.children}\n  </div>\n);\n\nFormAction.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default FormAction;\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ninterface TFormProps {\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  autocomplete?: 'on' | 'off';\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n};\n\nconst Form: React.FC<TFormProps> = (props) => {\n  const { autocomplete = 'off' } = props;\n\n  return (\n    <form\n      className={classname('form', props, { mods: { theme: 'standard' } })}\n      onSubmit={props.onSubmit}\n      autoComplete={autocomplete}\n    >\n      <div className=\"form__content\">\n        {props.children}\n      </div>\n    </form>\n  )\n};\n\nexport default Form;\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ninterface ITextFieldProps {\n  id: string;\n  caption: string;\n  name: string;\n  value?: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n};\n\nconst TextField = (props: ITextFieldProps) => {\n  return (\n    <div className={classname('text-field', props, { mods: { theme: 'standard' } })}>\n      {props.caption && (\n        <label\n          className={'text-field__caption'}\n          htmlFor={props.id}\n        >\n          {props.caption}\n        </label>\n      )}\n\n      <input\n        className={'text-field__input'}\n        id={props.id}\n        type=\"text\"\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ninterface INumberFieldProps {\n  id: string;\n  caption?: string;\n  name: string;\n  value?: string | number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n}\n\nconst NumberField: React.FC<INumberFieldProps> = (props) => {\n  return (\n    <div className={classname('number-field', props, { mods: { theme: 'standard' } })}>\n      {props.caption && (\n        <label\n          className={'number-field__caption'}\n          htmlFor={props.id}\n        >\n          {props.caption}\n        </label>\n      )}\n\n      <input\n        className={'number-field__input'}\n        id={props.id}\n        type=\"number\"\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n      />\n    </div>\n  );\n};\n\nexport default NumberField;\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ntype TCheckboxProps = {\n  id: string;\n  caption: string;\n  name: string;\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n}\n\nconst Checkbox = (props: TCheckboxProps) => {\n  return (\n    <div className={classname('checkbox', props, { mods: { theme: 'standard' } })}>\n      <label\n        className=\"checkbox__inner\"\n        htmlFor={props.id}\n      >\n        {props.caption && (\n          <div className={'checkbox__caption'}>\n            {props.caption}\n          </div>\n        )}\n\n        <input\n          className={'checkbox__input'}\n          id={props.id}\n          type=\"checkbox\"\n          name={props.name}\n          checked={props.checked}\n          onChange={props.onChange}\n        />\n\n        <div className=\"checkbox__control\"></div>\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from 'react';\n\nimport Form, {\n  FormField,\n  FormActions,\n  FormAction,\n} from '../form';\nimport TextField from '../text-field';\nimport NumberField from '../number-field';\nimport Checkbox from '../checkbox';\nimport Button from '../button';\n\nimport { IBook } from '../../models';\n\ninterface IBookFormProps {\n  type: 'add' | 'edit';\n  submitHandler: (bookData: IBook) => void;\n  cancelHandler: (id?: number) => void;\n  bookData?: IBook;\n};\n\ninterface IInvalidFields {\n  [formFieldName: string]: boolean;\n};\n\nconst defaultFormState: IBook = {\n  title: '',\n  author: '',\n  price: 0,\n  date: '',\n  inStock: true,\n};\n\nconst BookForm: React.FC<IBookFormProps> = (props) => {\n  const { bookData = {} } = props;\n  const [formState, setFormState] = useState<IBook>({ ...defaultFormState, ...bookData });\n  const [invalidFields, setInvalidFields] = useState<IInvalidFields>({});\n\n  const onFieldChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { target } = e;\n    const { name } = target;\n\n    let value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked;\n    } else if (name === 'price') {\n      value = target.value ? Number.parseFloat(target.value) : '';\n    } else {\n      value = target.value;\n    }\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  }\n\n  const onFieldFocus = (e: React.FocusEvent<HTMLInputElement>): void => {\n    const { name } = e.currentTarget;\n\n    setInvalidFields({\n      ...invalidFields,\n      [name]: false,\n    });\n  }\n\n  const submitForm = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    if (!formState.author.trim() || !formState.title.trim()) {\n      setInvalidFields({\n        author: !formState.author,\n        title: !formState.title,\n      });\n\n      return;\n    }\n\n    props.submitHandler(formState);\n    setFormState(defaultFormState);\n    props.cancelHandler();\n  }\n\n  return(\n    <Form\n      onSubmit={submitForm}\n    >\n      <FormField>\n        <TextField\n          mods={{ ...(invalidFields.author ? { state: 'error' } : {}) }}\n          id=\"input-author\"\n          caption=\"Автор\"\n          name=\"author\"\n          value={formState.author}\n          onChange={onFieldChange}\n          onFocus={onFieldFocus}\n        />\n      </FormField>\n  \n      <FormField>\n        <TextField\n          mods={{ ...(invalidFields.title ? { state: 'error' } : {}) }}\n          id=\"input-title\"\n          caption=\"Название\"\n          name=\"title\"\n          value={formState.title}\n          onChange={onFieldChange}\n          onFocus={onFieldFocus}\n        />\n      </FormField>\n  \n      <FormField>\n        <NumberField\n          id=\"input-price\"\n          caption=\"Стоимость\"\n          name=\"price\"\n          value={formState.price}\n          onChange={onFieldChange}\n        />\n      </FormField>\n  \n      <FormField>\n        <TextField\n          id=\"input-date\"\n          caption=\"Дата выпуска\"\n          name=\"date\"\n          value={formState.date}\n          onChange={onFieldChange}\n        />\n      </FormField>\n  \n      <FormField>\n        <Checkbox\n          id=\"input-in-stock\"\n          caption=\"В наличии\"\n          name=\"inStock\"\n          checked={formState.inStock}\n          onChange={onFieldChange}\n        />\n      </FormField>\n  \n      <FormActions>\n        <FormAction>\n          <Button\n            mods={{\n              theme: 'standard',\n              type: 'primary',\n            }}\n            onClick={submitForm}\n            type=\"submit\"\n          >\n            {props.type === 'edit' ? 'Сохранить' : 'Добавить'}\n          </Button>\n        </FormAction>\n\n        <FormAction>\n          <Button\n            mods={{\n              theme: 'standard',\n              type: 'secondary',\n            }}\n            onClick={props.cancelHandler}\n          >Отмена</Button>\n        </FormAction>\n      </FormActions>\n    </Form>\n  );\n}\n\nexport default BookForm;\n","import React from 'react';\n\nimport classname from '../../helpers/classname';\n\ninterface IModalProps {\n  isOpen: boolean;\n  title: string;\n  mix?: string;\n  mods?: Record<string, string | boolean>;\n}\n\nconst Modal: React.FC<IModalProps> = (props) => {\n  if (!props.isOpen) return null;\n\n  return (\n    <div className={classname('modal', props, { mods: { theme: 'standard' } })}>\n      <div className=\"modal__inner\">\n        {props.title && (\n          <h1 className=\"modal__title\">\n            {props.title}\n          </h1>\n        )}\n\n        <div className=\"modal__content\">\n          {props.children}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport BookForm from '../book-form';\nimport Modal from '../modal';\n\nimport { IBook } from '../../models';\n\nconst TITLE = {\n  add: 'Добавление книги',\n  edit: 'Редактирование книги',\n};\n\ninterface IBookModal {\n  isOpen: boolean;\n  submitHandler: (book: IBook) => void;\n  closeHandler: (id?: number) => void;\n  type: 'add' | 'edit';\n  bookData?: IBook;\n}\n\nconst BookModal: React.FC<IBookModal> = (props) => {\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      title={TITLE[props.type]}\n    >\n      <BookForm\n        type={props.type}\n        bookData={props.bookData}\n        submitHandler={props.submitHandler}\n        cancelHandler={props.closeHandler}\n      />\n    </Modal>\n  );\n}\n\nexport default BookModal;\n","import { makeAutoObservable, IObservableArray, observable } from \"mobx\"\n\nimport { IBook, IBookIndexed } from '../models';\n\nclass BooksStore {\n  readonly books: IObservableArray<IBookIndexed> = observable([\n    {\n      id: Math.random(),\n      title: 'Мастер и Маргарита',\n      author: 'Михаил булгаков',\n      price: 150,\n      date: '1960',\n      inStock: true,\n    },\n    {\n      id: Math.random(),\n      title: 'Братья Карамазовы',\n      author: 'Фёдор Достоевский',\n      price: 230,\n      date: '1879',\n      inStock: true,\n    },\n  ]);\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  addBook(book: IBook) {\n    const newBook = { ...book, id: Date.now() };\n\n    this.books.push(newBook);\n  }\n\n  getEditableBookData(id: number) {\n    return this.books.find(book => book.id === id);\n  }\n\n  editBook(id: number, newData: IBook) {\n    const editableBookIndex = this.books.findIndex(book => book.id === id);\n\n    if (editableBookIndex > -1) {\n      this.books[editableBookIndex] = { ...this.books[editableBookIndex], ...newData};\n    }\n  }\n\n  deleteBook(id: number) {\n    const bookToRemove = this.books.find(book => book.id === id)\n\n    if (bookToRemove) this.books.remove(bookToRemove);\n  }\n}\n\nexport default new BooksStore();\n","import { useState } from 'react';\n\nimport Page from '../../components/page';\nimport '../../components/container';\nimport Books from '../../components/books';\nimport BookModal from '../../components/book-modal';\n\nimport booksStore from '../../store/books-store';\n\nimport { IBook, IBookIndexed } from '../../models';\n\nfunction HomeView() {\n  const [editableBookData, setEditableBookData] = useState<IBookIndexed>();\n  const [isAddBookModalOpen, setIsAddBookModalOpen] = useState<boolean>(false);\n  const [isEditBookModalOpen, setIsEditBookModalOpen] = useState<boolean>(false);\n\n  const toggleAddBookModal = () => {\n    setIsAddBookModalOpen(!isAddBookModalOpen);\n  }\n\n  const toggleEditBookModal = (id?: number) => {\n    if (!isEditBookModalOpen && !!id) {\n      const editableBook = booksStore.getEditableBookData(id);\n\n      if (editableBook) {\n        setEditableBookData({ ...editableBook });\n      }\n    }\n\n    setIsEditBookModalOpen(!isEditBookModalOpen);\n  }\n\n  const addNewBook = (newBook: IBook) => {\n    booksStore.addBook(newBook);\n  };\n\n  const editBook = (editedBook: IBook) => {\n    if (editableBookData?.id) {\n      booksStore.editBook(editableBookData.id, editedBook);\n    }\n  };\n\n  return (\n    <Page mix=\"container\">\n      <Books\n        books={booksStore.books}\n        onAddBook={toggleAddBookModal}\n        onEditBook={toggleEditBookModal}\n        onDeleteBook={booksStore.deleteBook}\n      />\n\n      <BookModal\n        isOpen={isAddBookModalOpen}\n        type=\"add\"\n        submitHandler={addNewBook}\n        closeHandler={toggleAddBookModal}\n      />\n\n      <BookModal\n        isOpen={isEditBookModalOpen}\n        type=\"edit\"\n        submitHandler={editBook}\n        closeHandler={toggleEditBookModal}\n        bookData={editableBookData}\n      />\n    </Page>\n  );\n}\n\nexport default HomeView;\n","import { Link } from 'react-router-dom';\n\nimport Page from '../../components/page';\nimport '../../components/container';\n\nfunction NotFoundView() {\n  return (\n    <Page mix=\"container\">\n      <h1>Запрашиваемая страница не найдена</h1>\n\n      <Link to=\"/\">Перейти на главную</Link>\n    </Page>\n  );\n}\n\nexport default NotFoundView;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from '../../pages/home';\nimport NotFound from '../../pages/not-found';\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <HashRouter >\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter >\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nimport './common/styles/tags.scss';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}