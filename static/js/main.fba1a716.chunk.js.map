{"version":3,"sources":["helpers/classname.js","components/page/page.jsx","components/table/__head/table-head.jsx","components/table/__body/table-body.jsx","components/table/__row/table-row.jsx","components/table/__cell/table-cell.jsx","components/table/table.jsx","components/button/button.jsx","components/books-table/books-table.jsx","components/books/books.jsx","components/form/__field/form-field.jsx","components/form/__actions/form-actions.jsx","components/form/__action/form-action.jsx","components/form/form.jsx","components/text-field/text-field.jsx","components/number-field/number-field.jsx","components/checkbox/checkbox.jsx","components/book-form/book-form.jsx","components/modal/modal.jsx","components/book-modal/book-modal.jsx","store/books-store.js","pages/home/home.jsx","pages/not-found/not-found.jsx","components/app/app.jsx","index.js"],"names":["classname","baseClass","mods","mix","defaultMods","defaultMix","modsEntries","Object","entries","mixes","trim","length","concat","modsClasses","map","key","value","join","Page","props","className","children","TableHead","TableBody","TableRow","TableCell","CellTag","type","Table","theme","Button","onClick","defaultProps","BooksTable","books","book","title","author","price","date","inStock","onEditBook","id","onDeleteBook","Books","onAddBook","observer","FormField","FormActions","FormAction","Form","onSubmit","autoComplete","autocomplete","TextField","caption","htmlFor","name","onChange","onFocus","NumberField","Checkbox","checked","defaultFormState","BookForm","useState","bookData","formState","setFormState","invalidFields","setInvalidFields","onFieldChange","e","target","Number","parseFloat","onFieldFocus","currentTarget","state","preventDefault","onCancel","Modal","isOpen","TITLE","add","edit","BookModal","onClose","Math","random","makeAutoObservable","this","newBook","push","find","newData","forEach","ind","bookToRemove","remove","HomeView","editableBookData","setEditableBookData","isAddBookModalOpen","setIsAddBookModalOpen","isEditBookModalOpen","setIsEditBookModalOpen","toggleAddBookModal","toggleEditBookModal","editableBook","booksStore","getEditableBookData","deleteBook","addBook","editBook","NotFoundView","to","App","StrictMode","exact","path","component","Home","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fba1a716.chunk.js","sourcesContent":["export default function classname(\n  baseClass,\n  { mods = {}, mix = '' } = {},\n  { mods: defaultMods = {}, mix: defaultMix = '' } = {}\n) {\n  const modsEntries = Object.entries({ ...defaultMods, ...mods });\n  const mixes = `${defaultMix} ${mix}`.trim();\n\n  if (!modsEntries.length) return baseClass.concat(' ', mixes);\n\n  const modsClasses = modsEntries\n    .map(([key, value]) => typeof value === 'boolean'\n      ? `${baseClass}_${key}`\n      : `${baseClass}_${key}_${value}`\n    )\n    .join(' ');\n\n  return baseClass.concat(' ', modsClasses, ' ', mixes);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst Page = (props) => (\n  <div className={classname('page', props)}>\n    {props.children}\n  </div>\n);\n\nPage.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableHead = ({ children }) => (\n  <thead className=\"table__head\">\n    {children}\n  </thead>\n);\n\nTableHead.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TableHead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableBody = ({ children }) => (\n  <tbody className=\"table__body\">\n    {children}\n  </tbody>\n);\n\nTableBody.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default TableBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({ children }) => (\n  <tr className=\"table__row\">\n    {children}\n  </tr>\n);\n\nTableRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../../helpers/classname';\n\nconst TableCell = (props) => {\n  const CellTag = props.mods && props.mods.type === 'heading' ? 'th' : 'td';\n\n  return (\n    <CellTag className={classname('table__cell', props)}>\n      <div className=\"table__cell-content\">\n        {props.children}\n      </div>\n    </CellTag>\n  );\n};\n\nTableCell.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TableCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst Table = (props) => (\n  <table className={classname('table', props, { mods: { theme: 'standard' } })}>\n    {props.children}\n  </table>\n);\n\nTable.propTypes = {\n  children: PropTypes.node,\n};\n\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst Button = (props) => {\n  const {\n    children,\n    onClick,\n    type,\n  } = props;\n\n  return (\n    <button\n      className={classname('button', props)}\n      onClick={onClick}\n      type={type}\n    >\n      <span className=\"button__content\">\n        {children}\n      </span>\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf(['button', 'reset', 'submit']),\n};\n\nButton.defaultProps = {\n  type: 'button',\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table, {\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '../table';\nimport Button from '../button';\n\nfunction BooksTable(props) {\n  return (\n    <Table\n      mods={{ type: 'books' }}\n      mix={'books-table'}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell mods={{ type: 'heading' }}>\n            Название\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            Автор\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            Стоимость\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            Дата\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading' }}>\n            В наличии\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading', 'hidden-content': true }}>\n            Редактировать\n          </TableCell>\n\n          <TableCell mods={{ type: 'heading', 'hidden-content': true }}>\n            Удалить\n          </TableCell>\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {props.books.map(book => (\n          <TableRow key={book.id}>\n            <TableCell>\n              {book.title}\n            </TableCell>\n\n            <TableCell>\n              {book.author}\n            </TableCell>\n\n            <TableCell>\n              {book.price}\n            </TableCell>\n\n            <TableCell>\n              {book.date}\n            </TableCell>\n\n            <TableCell>\n              {book.inStock ? 'Да' : 'Нет'}\n            </TableCell>\n\n            <TableCell>\n              <Button\n                mods={{\n                  theme: 'action',\n                  'only-icon': true,\n                }}\n                mix={'books-table__edit'}\n                onClick={() => props.onEditBook(book.id)}\n              >\n                Редактировать\n              </Button>\n            </TableCell>\n\n            <TableCell>\n              <Button\n                mods={{\n                  theme: 'action',\n                  'only-icon': true,\n                }}\n                mix={'books-table__delete'}\n                onClick={() => props.onDeleteBook(book.id)}\n              >\n                Удалить\n              </Button>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  )\n};\n\nBooksTable.propTypes = {\n  onEditBook: PropTypes.func,\n  onDeleteBook: PropTypes.func,\n  books: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    author: PropTypes.string,\n    price: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    date: PropTypes.string,\n    inStock: PropTypes.bool,\n  })),\n}\n\nBooksTable.defaultProps = {\n  books: [],\n}\n\nexport default BooksTable;\n","import PropTypes from 'prop-types';\nimport { observer } from \"mobx-react\"\n\nimport BooksTable from '../books-table';\nimport Button from '../button';\n\nimport classname from '../../helpers/classname';\n\nfunction Books(props) {\n  return (\n    <section className={classname('books', props)}>\n      <h1 className=\"books__title\">\n        Книги\n      </h1>\n\n      {!!props.books.length\n        ? (\n          <BooksTable\n            books={props.books}\n            onEditBook={props.onEditBook}\n            onDeleteBook={props.onDeleteBook}\n          />\n        )\n        : (\n          <p className=\"books__description\">В вашем списке ещё нет книг.</p>\n        )\n      }\n\n      <div className=\"books__actions\">\n        <Button\n          mods={{\n            theme: 'standard',\n            type: 'primary',\n          }}\n          onClick={props.onAddBook}\n        >\n          Добавить\n        </Button>\n      </div>\n    </section>\n  );\n}\n\nBooks.propTypes = {\n  onAddBook: PropTypes.func,\n  onEditBook: PropTypes.func,\n  onDeleteBook: PropTypes.func,\n  books: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    author: PropTypes.string,\n    price: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    date: PropTypes.string,\n    inStock: PropTypes.bool,\n  })),\n}\n\nBooks.defaultProps = {\n  books: [],\n}\n\nexport default observer(Books);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../../helpers/classname';\n\nconst FormField = (props) => (\n  <div className={classname('form__field', props)}>\n    {props.children}\n  </div>\n);\n\nFormField.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default FormField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../../helpers/classname';\n\nconst FormActions = (props) => (\n  <div className={classname('form__actions', props)}>\n    {props.children}\n  </div>\n);\n\nFormActions.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default FormActions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../../helpers/classname';\n\nconst FormAction = (props) => (\n  <div className={classname('form__action', props)}>\n    {props.children}\n  </div>\n);\n\nFormAction.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default FormAction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst Form = (props) => (\n  <form\n    className={classname('form', props, { mods: { theme: 'standard' } })}\n    onSubmit={props.onSubmit}\n    autoComplete={props.autocomplete}\n  >\n    <div className=\"form__content\">\n      {props.children}\n    </div>\n  </form>\n);\n\nForm.propTypes = {\n  children: PropTypes.node,\n  onSubmit: PropTypes.func,\n  autocomplete: PropTypes.string,\n};\n\nForm.defaultProps = {\n  autocomplete: 'off',\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst TextField = (props) => {\n  return (\n    <div className={classname('text-field', props, { mods: { theme: 'standard' } })}>\n      {props.caption && (\n        <label\n          className={'text-field__caption'}\n          htmlFor={props.id}\n        >\n          {props.caption}\n        </label>\n      )}\n\n      <input\n        className={'text-field__input'}\n        id={props.id}\n        type=\"text\"\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n      />\n    </div>\n  );\n};\n\nTextField.propTypes = {\n  id: PropTypes.string,\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n};\n\nexport default TextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst NumberField = (props) => {\n  return (\n    <div className={classname('number-field', props, { mods: { theme: 'standard' } })}>\n      {props.caption && (\n        <label\n          className={'number-field__caption'}\n          htmlFor={props.id}\n        >\n          {props.caption}\n        </label>\n      )}\n\n      <input\n        className={'number-field__input'}\n        id={props.id}\n        type=\"number\"\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n      />\n    </div>\n  );\n};\n\nNumberField.propTypes = {\n  id: PropTypes.string,\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n};\n\nexport default NumberField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst Checkbox = (props) => {\n  return (\n    <div className={classname('checkbox', props, { mods: { theme: 'standard' } })}>\n      <label\n        className=\"checkbox__inner\"\n        htmlFor={props.id}\n      >\n        {props.caption && (\n          <div className={'checkbox__caption'}>\n            {props.caption}\n          </div>\n        )}\n\n        <input\n          className={'checkbox__input'}\n          id={props.id}\n          type=\"checkbox\"\n          name={props.name}\n          checked={props.checked}\n          onChange={props.onChange}\n        />\n\n        <div className=\"checkbox__control\"></div>\n      </label>\n    </div>\n  );\n};\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nCheckbox.defaultProps = {\n  type: 'button',\n};\n\nexport default Checkbox;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form, {\n  FormField,\n  FormActions,\n  FormAction,\n} from '../form';\nimport TextField from '../text-field';\nimport NumberField from '../number-field';\nimport Checkbox from '../checkbox';\nimport Button from '../button';\n\nconst defaultFormState = {\n  author: '',\n  title: '',\n  price: 0,\n  date: '',\n  inStock: true,\n};\n\nconst BookForm = (props) => {\n  const [formState, setFormState] = useState({ ...defaultFormState, ...props.bookData });\n  const [invalidFields, setInvalidFields] = useState({});\n\n  const onFieldChange = (e) => {\n    const { target } = e;\n    const { name } = target;\n\n    let value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked;\n    } else if (name === 'price') {\n      value = target.value ? Number.parseFloat(target.value) : '';\n    } else {\n      value = target.value;\n    }\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  }\n\n  const onFieldFocus = (e) => {\n    const { name } = e.currentTarget;\n\n    setInvalidFields({\n      ...invalidFields,\n      [name]: false,\n    });\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    if (!formState.author.trim() || !formState.title.trim()) {\n      setInvalidFields({\n        author: !formState.author,\n        title: !formState.title,\n      });\n\n      return;\n    }\n\n    props.onSubmit(formState);\n    setFormState(defaultFormState);\n    props.onCancel();\n  }\n\n  return(\n    <Form>\n      <FormField>\n        <TextField\n          mods={{ ...(invalidFields.author ? { state: 'error' } : {}) }}\n          id=\"input-author\"\n          caption=\"Автор\"\n          name=\"author\"\n          value={formState.author}\n          onChange={onFieldChange}\n          onFocus={onFieldFocus}\n        />\n      </FormField>\n  \n      <FormField>\n        <TextField\n          mods={{ ...(invalidFields.title ? { state: 'error' } : {}) }}\n          id=\"input-title\"\n          caption=\"Название\"\n          name=\"title\"\n          value={formState.title}\n          onChange={onFieldChange}\n          onFocus={onFieldFocus}\n        />\n      </FormField>\n  \n      <FormField>\n        <NumberField\n          id=\"input-price\"\n          caption=\"Стоимость\"\n          name=\"price\"\n          value={formState.price}\n          onChange={onFieldChange}\n        />\n      </FormField>\n  \n      <FormField>\n        <TextField\n          id=\"input-date\"\n          caption=\"Дата выпуска\"\n          name=\"date\"\n          value={formState.date}\n          onChange={onFieldChange}\n        />\n      </FormField>\n  \n      <FormField>\n        <Checkbox\n          id=\"input-in-stock\"\n          caption=\"В наличии\"\n          name=\"inStock\"\n          checked={formState.inStock}\n          onChange={onFieldChange}\n        />\n      </FormField>\n  \n      <FormActions>\n        <FormAction>\n          <Button\n            mods={{\n              theme: 'standard',\n              type: 'primary',\n            }}\n            onClick={submitForm}\n            type=\"submit\"\n          >\n            {props.type === 'edit' ? 'Сохранить' : 'Добавить'}\n          </Button>\n        </FormAction>\n\n        <FormAction>\n          <Button\n            mods={{\n              theme: 'standard',\n              type: 'secondary',\n            }}\n            onClick={props.onCancel}\n          >Отмена</Button>\n        </FormAction>\n      </FormActions>\n    </Form>\n  );\n}\n\nBookForm.propTypes = {\n  type: PropTypes.oneOf(['add', 'edit']),\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  bookData: PropTypes.shape({\n    title: PropTypes.string,\n    author: PropTypes.string,\n    price: PropTypes.number,\n    date: PropTypes.string,\n    inStock: PropTypes.bool,\n  }),\n};\n\nBookForm.defaultProps = {\n  bookData: {},\n};\n\nexport default BookForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classname from '../../helpers/classname';\n\nconst Modal = (props) => {\n  if (!props.isOpen) return null;\n\n  return (\n    <div className={classname('modal', props, { mods: { theme: 'standard' } })}>\n      <div className=\"modal__inner\">\n        {props.title && (\n          <h1 className=\"modal__title\">\n            {props.title}\n          </h1>\n        )}\n\n        <div className=\"modal__content\">\n          {props.children}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookForm from '../book-form';\nimport Modal from '../modal';\n\nconst TITLE = {\n  add: 'Добавление книги',\n  edit: 'Редактирование книги',\n};\n\nconst BookModal = (props) => {\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      title={TITLE[props.type]}\n    >\n      <BookForm\n        type={props.type}\n        bookData={props.bookData}\n        onSubmit={props.onSubmit}\n        onCancel={props.onClose}\n      />\n    </Modal>\n  );\n}\n\nBookModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  type: PropTypes.oneOf(['add', 'edit']),\n  bookData: PropTypes.shape({\n    title: PropTypes.string,\n    author: PropTypes.string,\n    price: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    date: PropTypes.string,\n    inStock: PropTypes.bool,\n  }),\n};\n\nexport default BookModal;\n","import { makeAutoObservable } from \"mobx\"\n\nclass BooksStore {\n  books = [\n    {\n      id: Math.random(),\n      title: 'Мастер и Маргарита',\n      author: 'Михаил булгаков',\n      price: 150,\n      date: '1960',\n      inStock: true,\n    },\n    {\n      id: Math.random(),\n      title: 'Братья Карамазовы',\n      author: 'Фёдор Достоевский',\n      price: 230,\n      date: '1879',\n      inStock: true,\n    },\n  ];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  addBook(newBook) {\n    this.books.push(newBook);\n  }\n\n  getEditableBookData(id) {\n    return this.books.find(book => book.id === id);\n  }\n\n  editBook(id, newData) {\n    this.books.forEach((book, ind, books) => {\n      if (book.id === id) {\n        books[ind] = { ...books[ind], ...newData};\n      }\n    });\n  }\n  \n  deleteBook(id) {\n    const bookToRemove = this.books.find(book => book.id === id)\n    this.books.remove(bookToRemove);\n  }\n}\n\nexport default new BooksStore();\n","import { useState } from 'react';\n\nimport Page from '../../components/page';\nimport '../../components/container';\nimport Books from '../../components/books';\nimport BookModal from '../../components/book-modal';\n\nimport booksStore from '../../store/books-store.js';\n\nfunction HomeView() {\n  const [editableBookData, setEditableBookData] = useState({});\n  const [isAddBookModalOpen, setIsAddBookModalOpen] = useState(false);\n  const [isEditBookModalOpen, setIsEditBookModalOpen] = useState(false);\n\n  const toggleAddBookModal = () => {\n    setIsAddBookModalOpen(!isAddBookModalOpen);\n  }\n\n  const toggleEditBookModal = (id) => {\n    if (!isEditBookModalOpen) {\n      const editableBook = booksStore.getEditableBookData(id);\n      setEditableBookData({ ...editableBook });\n    }\n\n    setIsEditBookModalOpen(!isEditBookModalOpen);\n  }\n\n  const addNewBook = (newBook) => {\n    booksStore.addBook({ ...newBook, id: Math.random() });\n  };\n\n  const editBook = (newData) => {\n    booksStore.editBook(editableBookData.id, newData);\n  };\n\n  return (\n    <Page mix=\"container\">\n      <Books\n        books={booksStore.books}\n        onAddBook={toggleAddBookModal}\n        onEditBook={toggleEditBookModal}\n        onDeleteBook={booksStore.deleteBook}\n      />\n\n      <BookModal\n        isOpen={isAddBookModalOpen}\n        type=\"add\"\n        onSubmit={addNewBook}\n        onClose={toggleAddBookModal}\n      />\n\n      <BookModal\n        isOpen={isEditBookModalOpen}\n        type=\"edit\"\n        onSubmit={editBook}\n        onClose={toggleEditBookModal}\n        bookData={editableBookData}\n      />\n    </Page>\n  );\n}\n\nexport default HomeView;\n","import { Link } from 'react-router-dom';\n\nimport Page from '../../components/page';\nimport '../../components/container';\n\nfunction NotFoundView() {\n  return (\n    <Page mix=\"container\">\n      <h1>Запрашиваемая страница не найдена</h1>\n\n      <Link to=\"/\">Перейти на главную</Link>\n    </Page>\n  );\n}\n\nexport default NotFoundView;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from '../../pages/home';\nimport NotFound from '../../pages/not-found';\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <HashRouter >\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter >\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nimport './common/styles/tags.scss';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}